{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16145\\\\Desktop\\\\golf\\\\src\\\\GolfScorecard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./GolfScorecard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst holeInfo = [{\n  hole: 1,\n  par: 4,\n  handicap: 5\n}, {\n  hole: 2,\n  par: 3,\n  handicap: 11\n}, {\n  hole: 3,\n  par: 5,\n  handicap: 7\n}, {\n  hole: 4,\n  par: 4,\n  handicap: 1\n}, {\n  hole: 5,\n  par: 4,\n  handicap: 9\n}, {\n  hole: 6,\n  par: 5,\n  handicap: 17\n}, {\n  hole: 7,\n  par: 3,\n  handicap: 17\n}, {\n  hole: 8,\n  par: 4,\n  handicap: 15\n}, {\n  hole: 9,\n  par: 4,\n  handicap: 3\n}, {\n  hole: 10,\n  par: 4,\n  handicap: 8\n}, {\n  hole: 11,\n  par: 4,\n  handicap: 4\n}, {\n  hole: 12,\n  par: 3,\n  handicap: 14\n}, {\n  hole: 13,\n  par: 4,\n  handicap: 12\n}, {\n  hole: 14,\n  par: 4,\n  handicap: 10\n}, {\n  hole: 15,\n  par: 4,\n  handicap: 2\n}, {\n  hole: 16,\n  par: 5,\n  handicap: 2\n}, {\n  hole: 17,\n  par: 3,\n  handicap: 18\n}, {\n  hole: 18,\n  par: 5,\n  handicap: 6\n}];\nconst GolfScorecard = () => {\n  _s();\n  const [playerHandicaps, setPlayerHandicaps] = useState([]);\n  const addPlayerWithHandicap = () => {\n    const playerName = prompt(\"Please enter the player's name.\");\n    if (playerName === null || playerName.trim() === \"\") {\n      alert(\"Invalid name entered. Please enter a valid name.\");\n      return;\n    }\n    const handicap = parseInt(prompt(\"Please enter the player's handicap.\"));\n    if (isNaN(handicap)) {\n      alert(\"Invalid handicap entered. Please enter a valid number.\");\n    } else {\n      addPlayer(playerName, handicap);\n    }\n  };\n  const [editingHandicapIndex, setEditingHandicapIndex] = useState(null);\n  const handleHandicapChange = (index, newHandicap) => {\n    const newPlayerHandicaps = [...playerHandicaps];\n    newPlayerHandicaps[index] = newHandicap;\n    setPlayerHandicaps(newPlayerHandicaps);\n  };\n  const [skinsResult, setSkinsResult] = useState(null);\n  const calculateSkins = () => {\n    const skins = [];\n    let carryOver = 0;\n    const buyIn = 10;\n    const totalSkins = playerNames.length * buyIn;\n    holeInfo.forEach((hole, holeIndex) => {\n      const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\n      if (lowestNetScorePlayerIndex !== null) {\n        skins.push({\n          hole: hole.hole,\n          playerIndex: lowestNetScorePlayerIndex,\n          value: 1 + carryOver\n        });\n        carryOver = 0;\n      } else {\n        carryOver++;\n      }\n    });\n    const playerSkins = Array(playerNames.length).fill(0);\n    skins.forEach(skin => {\n      playerSkins[skin.playerIndex] += skin.value;\n    });\n    const payout = playerSkins.map(skinsWon => skinsWon * totalSkins / holeInfo.length);\n    setSkinsResult({\n      skins,\n      playerSkins,\n      payout\n    });\n  };\n  const getLowestNetScorePlayerIndex = holeIndex => {\n    let lowestNetScore = Infinity;\n    let lowestNetScorePlayerIndex = null;\n    let numLowestNetScores = 0;\n    for (let i = 0; i < playerNames.length; i++) {\n      const playerScore = scores[i][holeIndex];\n      const playerHandicap = playerHandicaps[i];\n      const holeHandicap = holeInfo[holeIndex].handicap;\n      const netScore = playerScore !== \"\" ? parseInt(playerScore) - (playerHandicap >= holeHandicap ? 1 : 0) : null;\n      if (netScore !== null && netScore < lowestNetScore) {\n        lowestNetScore = netScore;\n        lowestNetScorePlayerIndex = i;\n        numLowestNetScores = 1;\n      } else if (netScore !== null && netScore === lowestNetScore) {\n        numLowestNetScores++;\n      }\n    }\n    return numLowestNetScores === 1 ? lowestNetScorePlayerIndex : null;\n  };\n  const deletePlayer = playerIndex => {\n    if (window.confirm(\"Are you sure you want to delete this player?\")) {\n      const newPlayerNames = [...playerNames];\n      newPlayerNames.splice(playerIndex, 1);\n      setPlayerNames(newPlayerNames);\n      const newScores = [...scores];\n      newScores.splice(playerIndex, 1);\n      setScores(newScores);\n    }\n  };\n  const handlePlayerNameClick = index => {\n    setEditingPlayerIndex(index);\n  };\n  const handlePlayerNameChange = (index, newName) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = newName;\n    setPlayerNames(newPlayerNames);\n  };\n  const [playerNames, setPlayerNames] = useState([]);\n  const [scores, setScores] = useState(Array(playerNames.length).fill(Array(holeInfo.length).fill(\"\")));\n  const [editingPlayerIndex, setEditingPlayerIndex] = useState(null);\n  const updateScore = (playerIndex, holeIndex, score) => {\n    const newScores = [...scores];\n    newScores[playerIndex][holeIndex] = score;\n    setScores(newScores);\n  };\n  const addPlayer = (playerName, handicap) => {\n    const newPlayerNames = [...playerNames, playerName];\n    const newScores = [...scores, Array(holeInfo.length).fill(\"\")];\n    const newPlayerHandicaps = [...playerHandicaps, handicap];\n    setPlayerNames(newPlayerNames);\n    setScores(newScores);\n    setPlayerHandicaps(newPlayerHandicaps);\n  };\n  const getLowestScorePlayerIndex = holeIndex => {\n    let lowestScore = Infinity;\n    let lowestScorePlayerIndex = null;\n    let numLowestScores = 0;\n    for (let i = 0; i < playerNames.length; i++) {\n      const playerScore = scores[i][holeIndex];\n      if (playerScore !== \"\" && parseInt(playerScore) < lowestScore) {\n        lowestScore = parseInt(playerScore);\n        lowestScorePlayerIndex = i;\n        numLowestScores = 1;\n      } else if (playerScore !== \"\" && parseInt(playerScore) === lowestScore) {\n        numLowestScores++;\n      }\n    }\n    return numLowestScores === 1 ? lowestScorePlayerIndex : null;\n  };\n  const getCellClassName = (playerIndex, holeIndex, hasStroke) => {\n    const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\n    if (playerIndex === lowestNetScorePlayerIndex) {\n      return \"cell score lowest\";\n    }\n    if (hasStroke) {\n      return \"cell score with-stroke\";\n    }\n    return \"cell score\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scorecard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell player-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), holeInfo.map(hole => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", hole.hole]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Par \", hole.par]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"H: \", hole.handicap]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, hole.hole, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell total\",\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), playerNames.map((playerName, playerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell player-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePlayer(playerIndex),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this), editingPlayerIndex === playerIndex ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: playerName,\n          onChange: e => handlePlayerNameChange(playerIndex, e.target.value),\n          onBlur: () => setEditingPlayerIndex(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handlePlayerNameClick(playerIndex),\n          children: [playerName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"handicap\",\n            children: [\"H: \", playerHandicaps[playerIndex]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 11\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this), scores[playerIndex].map((score, holeIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCellClassName(playerIndex, holeIndex, playerHandicaps[playerIndex] >= holeInfo[holeIndex].handicap),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: score,\n          onChange: e => updateScore(playerIndex, holeIndex, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 5\n        }, this)]\n      }, holeIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 3\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell total\",\n        children: scores[playerIndex].reduce((acc, cur) => cur === \"\" ? acc : acc + parseInt(cur), 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, playerIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-player-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPlayerWithHandicap,\n        children: \"Add Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateSkins,\n        children: \"Calculate Skins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }, this), skinsResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skins-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skins Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playerNames.map((playerName, playerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [playerName, \": \", skinsResult.playerSkins[playerIndex], \" skins ($\", skinsResult.payout[playerIndex].toFixed(2), \")\"]\n        }, playerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(GolfScorecard, \"9lqMH0+0cCF53uvmHOTRcSbl9bE=\");\n_c = GolfScorecard;\nexport default GolfScorecard;\nvar _c;\n$RefreshReg$(_c, \"GolfScorecard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","holeInfo","hole","par","handicap","GolfScorecard","_s","playerHandicaps","setPlayerHandicaps","addPlayerWithHandicap","playerName","prompt","trim","alert","parseInt","isNaN","addPlayer","editingHandicapIndex","setEditingHandicapIndex","handleHandicapChange","index","newHandicap","newPlayerHandicaps","skinsResult","setSkinsResult","calculateSkins","skins","carryOver","buyIn","totalSkins","playerNames","length","forEach","holeIndex","lowestNetScorePlayerIndex","getLowestNetScorePlayerIndex","push","playerIndex","value","playerSkins","Array","fill","skin","payout","map","skinsWon","lowestNetScore","Infinity","numLowestNetScores","i","playerScore","scores","playerHandicap","holeHandicap","netScore","deletePlayer","window","confirm","newPlayerNames","splice","setPlayerNames","newScores","setScores","handlePlayerNameClick","setEditingPlayerIndex","handlePlayerNameChange","newName","editingPlayerIndex","updateScore","score","getLowestScorePlayerIndex","lowestScore","lowestScorePlayerIndex","numLowestScores","getCellClassName","hasStroke","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","onBlur","reduce","acc","cur","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/16145/Desktop/golf/src/GolfScorecard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./GolfScorecard.css\";\r\n\r\nconst holeInfo = [\r\n  { hole: 1, par: 4, handicap: 5 },\r\n  { hole: 2, par: 3, handicap: 11 },\r\n  { hole: 3, par: 5, handicap: 7 },\r\n  { hole: 4, par: 4, handicap: 1 },\r\n  { hole: 5, par: 4, handicap: 9 },\r\n  { hole: 6, par: 5, handicap: 17 },\r\n  { hole: 7, par: 3, handicap: 17 },\r\n  { hole: 8, par: 4, handicap: 15 },\r\n  { hole: 9, par: 4, handicap: 3 },\r\n  { hole: 10, par: 4, handicap: 8 },\r\n  { hole: 11, par: 4, handicap: 4 },\r\n  { hole: 12, par: 3, handicap: 14 },\r\n  { hole: 13, par: 4, handicap: 12 },\r\n  { hole: 14, par: 4, handicap: 10 },\r\n  { hole: 15, par: 4, handicap: 2 },\r\n  { hole: 16, par: 5, handicap: 2 },\r\n  { hole: 17, par: 3, handicap: 18 },\r\n  { hole: 18, par: 5, handicap: 6 },\r\n];\r\n\r\n\r\nconst GolfScorecard = () => {\r\n\r\n  \r\n  \r\n  const [playerHandicaps, setPlayerHandicaps] = useState([]);\r\n\r\n  const addPlayerWithHandicap = () => {\r\n    const playerName = prompt(\"Please enter the player's name.\");\r\n    if (playerName === null || playerName.trim() === \"\") {\r\n      alert(\"Invalid name entered. Please enter a valid name.\");\r\n      return;\r\n    }\r\n    const handicap = parseInt(prompt(\"Please enter the player's handicap.\"));\r\n    if (isNaN(handicap)) {\r\n      alert(\"Invalid handicap entered. Please enter a valid number.\");\r\n    } else {\r\n      addPlayer(playerName, handicap);\r\n    }\r\n  };\r\n  const [editingHandicapIndex, setEditingHandicapIndex] = useState(null);\r\n\r\n  const handleHandicapChange = (index, newHandicap) => {\r\n  const newPlayerHandicaps = [...playerHandicaps];\r\n  newPlayerHandicaps[index] = newHandicap;\r\n  setPlayerHandicaps(newPlayerHandicaps);\r\n};\r\n\r\n  const [skinsResult, setSkinsResult] = useState(null);\r\n\r\n  const calculateSkins = () => {\r\n    const skins = [];\r\n    let carryOver = 0;\r\n    const buyIn = 10;\r\n    const totalSkins = playerNames.length * buyIn;\r\n  \r\n    holeInfo.forEach((hole, holeIndex) => {\r\n      const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\r\n  \r\n      if (lowestNetScorePlayerIndex !== null) {\r\n        skins.push({\r\n          hole: hole.hole,\r\n          playerIndex: lowestNetScorePlayerIndex,\r\n          value: 1 + carryOver,\r\n        });\r\n        carryOver = 0;\r\n      } else {\r\n        carryOver++;\r\n      }\r\n    });\r\n  \r\n    const playerSkins = Array(playerNames.length).fill(0);\r\n    skins.forEach((skin) => {\r\n      playerSkins[skin.playerIndex] += skin.value;\r\n    });\r\n  \r\n    const payout = playerSkins.map((skinsWon) => (skinsWon * totalSkins) / holeInfo.length);\r\n  \r\n    setSkinsResult({ skins, playerSkins, payout });\r\n  };\r\n  \r\n  const getLowestNetScorePlayerIndex = (holeIndex) => {\r\n    let lowestNetScore = Infinity;\r\n    let lowestNetScorePlayerIndex = null;\r\n    let numLowestNetScores = 0;\r\n  \r\n    for (let i = 0; i < playerNames.length; i++) {\r\n      const playerScore = scores[i][holeIndex];\r\n      const playerHandicap = playerHandicaps[i];\r\n      const holeHandicap = holeInfo[holeIndex].handicap;\r\n      const netScore = playerScore !== \"\" ? parseInt(playerScore) - (playerHandicap >= holeHandicap ? 1 : 0) : null;\r\n  \r\n      if (netScore !== null && netScore < lowestNetScore) {\r\n        lowestNetScore = netScore;\r\n        lowestNetScorePlayerIndex = i;\r\n        numLowestNetScores = 1;\r\n      } else if (netScore !== null && netScore === lowestNetScore) {\r\n        numLowestNetScores++;\r\n      }\r\n    }\r\n  \r\n    return numLowestNetScores === 1 ? lowestNetScorePlayerIndex : null;\r\n  };\r\n  \r\n\r\n  const deletePlayer = (playerIndex) => {\r\n    if (window.confirm(\"Are you sure you want to delete this player?\")) {\r\n      const newPlayerNames = [...playerNames];\r\n      newPlayerNames.splice(playerIndex, 1);\r\n      setPlayerNames(newPlayerNames);\r\n\r\n      const newScores = [...scores];\r\n      newScores.splice(playerIndex, 1);\r\n      setScores(newScores);\r\n    }\r\n  };\r\n\r\n  const handlePlayerNameClick = (index) => {\r\n    setEditingPlayerIndex(index);\r\n  };\r\n\r\n  const handlePlayerNameChange = (index, newName) => {\r\n    const newPlayerNames = [...playerNames];\r\n    newPlayerNames[index] = newName;\r\n    setPlayerNames(newPlayerNames);\r\n  };\r\n\r\n  const [playerNames, setPlayerNames] = useState([]);\r\n  const [scores, setScores] = useState(\r\n    Array(playerNames.length).fill(Array(holeInfo.length).fill(\"\"))\r\n  );\r\n  const [editingPlayerIndex, setEditingPlayerIndex] = useState(null);\r\n\r\n  const updateScore = (playerIndex, holeIndex, score) => {\r\n    const newScores = [...scores];\r\n    newScores[playerIndex][holeIndex] = score;\r\n    setScores(newScores);\r\n  };\r\n\r\n  const addPlayer = (playerName, handicap) => {\r\n    const newPlayerNames = [...playerNames, playerName];\r\n    const newScores = [...scores, Array(holeInfo.length).fill(\"\")];\r\n    const newPlayerHandicaps = [...playerHandicaps, handicap];\r\n    setPlayerNames(newPlayerNames);\r\n    setScores(newScores);\r\n    setPlayerHandicaps(newPlayerHandicaps);\r\n  };\r\n\r\n  const getLowestScorePlayerIndex = (holeIndex) => {\r\n    let lowestScore = Infinity;\r\n    let lowestScorePlayerIndex = null;\r\n    let numLowestScores = 0;\r\n\r\n    for (let i = 0; i < playerNames.length; i++) {\r\n      const playerScore = scores[i][holeIndex];\r\n      if (playerScore !== \"\" && parseInt(playerScore) < lowestScore) {\r\n        lowestScore = parseInt(playerScore);\r\n        lowestScorePlayerIndex = i;\r\n        numLowestScores = 1;\r\n      } else if (playerScore !== \"\" && parseInt(playerScore) === lowestScore) {\r\n        numLowestScores++;\r\n      }\r\n    }\r\n  \r\n    return numLowestScores === 1 ? lowestScorePlayerIndex : null;\r\n  };\r\n  const getCellClassName = (playerIndex, holeIndex, hasStroke) => {\r\n    const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\r\n  \r\n    if (playerIndex === lowestNetScorePlayerIndex) {\r\n      return \"cell score lowest\";\r\n    }\r\n  \r\n    if (hasStroke) {\r\n      return \"cell score with-stroke\";\r\n    }\r\n  \r\n    return \"cell score\";\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"scorecard\">\r\n      <div className=\"header\">\r\n        <div className=\"cell player-name\"></div>\r\n        {holeInfo.map((hole) => (\r\n          <div key={hole.hole} className=\"cell\">\r\n            <div> {hole.hole}</div>\r\n            <div>Par {hole.par}</div>\r\n            <div>H: {hole.handicap}</div>\r\n          </div>\r\n        ))}\r\n        <div className=\"cell total\">Total</div>\r\n      </div>\r\n  \r\n      {playerNames.map((playerName, playerIndex) => (\r\n        <div key={playerIndex} className=\"body\">\r\n    <div className=\"cell player-name\">\r\n      <button onClick={() => deletePlayer(playerIndex)}>Delete</button>\r\n\r\n      {editingPlayerIndex === playerIndex ? (\r\n        <input\r\n          type=\"text\"\r\n          value={playerName}\r\n          onChange={(e) =>\r\n            handlePlayerNameChange(playerIndex, e.target.value)\r\n          }\r\n          onBlur={() => setEditingPlayerIndex(null)}\r\n        />\r\n      ) : (\r\n        <span onClick={() => handlePlayerNameClick(playerIndex)}>\r\n          {playerName}\r\n          <span className=\"handicap\">H: {playerHandicaps[playerIndex]}</span> {/* This line is added */}\r\n        </span>\r\n      )}\r\n    </div>\r\n\r\n    {scores[playerIndex].map((score, holeIndex) => (\r\n  <div key={holeIndex} className={getCellClassName(playerIndex, holeIndex, playerHandicaps[playerIndex] >= holeInfo[holeIndex].handicap)}>\r\n    <span className=\"dot\"></span>\r\n    <input\r\n      type=\"number\"\r\n      value={score}\r\n      onChange={(e) =>\r\n        updateScore(playerIndex, holeIndex, e.target.value)\r\n      }\r\n    />\r\n  </div>\r\n))}\r\n          <div className=\"cell total\">\r\n            {scores[playerIndex].reduce(\r\n              (acc, cur) => (cur === \"\" ? acc : acc + parseInt(cur)),\r\n              0\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n<div className=\"add-player-button\">\r\n  <button onClick={addPlayerWithHandicap}>Add Player</button>\r\n</div>\r\n\r\n\r\n    <div className=\"footer\">\r\n      <button onClick={calculateSkins}>Calculate Skins</button>\r\n    </div>\r\n    {skinsResult && (\r\n  <div className=\"skins-result\">\r\n    <h2>Skins Results</h2>\r\n    <ul>\r\n      {playerNames.map((playerName, playerIndex) => (\r\n        <li key={playerIndex}>\r\n          {playerName}: {skinsResult.playerSkins[playerIndex]} skins (${skinsResult.payout[playerIndex].toFixed(2)})\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n  \r\n            }\r\n            export default GolfScorecard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
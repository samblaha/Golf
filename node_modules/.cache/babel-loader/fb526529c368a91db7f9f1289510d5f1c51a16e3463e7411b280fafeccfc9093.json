{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16145\\\\Desktop\\\\golf\\\\src\\\\GolfScorecard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./GolfScorecard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst holeInfo = [{\n  hole: 1,\n  par: 4,\n  handicap: 5\n}, {\n  hole: 2,\n  par: 3,\n  handicap: 11\n}, {\n  hole: 3,\n  par: 5,\n  handicap: 7\n}, {\n  hole: 4,\n  par: 4,\n  handicap: 1\n}, {\n  hole: 5,\n  par: 4,\n  handicap: 9\n}, {\n  hole: 6,\n  par: 5,\n  handicap: 16\n}, {\n  hole: 7,\n  par: 3,\n  handicap: 17\n}, {\n  hole: 8,\n  par: 4,\n  handicap: 15\n}, {\n  hole: 9,\n  par: 4,\n  handicap: 3\n}, {\n  hole: 10,\n  par: 4,\n  handicap: 8\n}, {\n  hole: 11,\n  par: 4,\n  handicap: 4\n}, {\n  hole: 12,\n  par: 3,\n  handicap: 14\n}, {\n  hole: 13,\n  par: 4,\n  handicap: 12\n}, {\n  hole: 14,\n  par: 4,\n  handicap: 10\n}, {\n  hole: 15,\n  par: 4,\n  handicap: 2\n}, {\n  hole: 16,\n  par: 5,\n  handicap: 2\n}, {\n  hole: 17,\n  par: 3,\n  handicap: 18\n}, {\n  hole: 18,\n  par: 5,\n  handicap: 6\n}];\nconst GolfScorecard = () => {\n  _s();\n  const [buyIn, setBuyIn] = useState(10);\n  const [isBuyInPopupVisible, setIsBuyInPopupVisible] = useState(false);\n  const changeBuyIn = newBuyIn => {\n    setBuyIn(newBuyIn);\n  };\n  const toggleBuyInPopup = () => {\n    setIsBuyInPopupVisible(!isBuyInPopupVisible);\n  };\n  /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleBuyInPopup,\n    children: \"Change Buy-in\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n  const getStrokeIndex = (playerIndex, holeIndex) => {\n    const playerHandicap = playerHandicaps[playerIndex];\n    const holeHandicap = holeInfo[holeIndex].handicap;\n    return playerHandicap >= holeHandicap ? 1 : 0;\n  };\n  const [playerHandicaps, setPlayerHandicaps] = useState([]);\n  const addPlayerWithHandicap = () => {\n    const playerName = prompt(\"Please enter the player's name.\");\n    if (playerName === null || playerName.trim() === \"\") {\n      alert(\"Invalid name entered. Please enter a valid name.\");\n      return;\n    }\n    const handicap = parseInt(prompt(\"Please enter the player's handicap.\"));\n    if (isNaN(handicap)) {\n      alert(\"Invalid handicap entered. Please enter a valid number.\");\n    } else {\n      addPlayer(playerName, handicap);\n    }\n  };\n  const handleHandicapChange = (index, newHandicap) => {\n    const newPlayerHandicaps = [...playerHandicaps];\n    newPlayerHandicaps[index] = newHandicap;\n    setPlayerHandicaps(newPlayerHandicaps);\n  };\n  const [skinsResult, setSkinsResult] = useState(null);\n  const calculateSkins = () => {\n    const skins = [];\n    let carryOver = 0;\n    const buyIn = 10;\n    const totalSkins = playerNames.length * buyIn;\n    holeInfo.forEach((hole, holeIndex) => {\n      const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\n      if (lowestNetScorePlayerIndex !== null) {\n        skins.push({\n          hole: hole.hole,\n          playerIndex: lowestNetScorePlayerIndex,\n          value: 1 + carryOver\n        });\n        carryOver = 0;\n      } else {\n        carryOver++;\n      }\n    });\n    const playerSkins = Array(playerNames.length).fill(0);\n    skins.forEach(skin => {\n      playerSkins[skin.playerIndex] += skin.value;\n    });\n    const payout = playerSkins.map(skinsWon => skinsWon * totalSkins / holeInfo.length);\n    setSkinsResult({\n      skins,\n      playerSkins,\n      payout\n    });\n  };\n  const getLowestNetScorePlayerIndex = holeIndex => {\n    let lowestNetScore = Infinity;\n    let lowestNetScorePlayerIndex = null;\n    let numLowestNetScores = 0;\n    for (let i = 0; i < playerNames.length; i++) {\n      const playerScore = scores[i][holeIndex];\n      const playerHandicap = playerHandicaps[i];\n      const holeHandicap = holeInfo[holeIndex].handicap;\n      const netScore = playerScore !== \"\" ? parseInt(playerScore) - (playerHandicap >= holeHandicap ? 1 : 0) : null;\n      if (netScore !== null && netScore < lowestNetScore) {\n        lowestNetScore = netScore;\n        lowestNetScorePlayerIndex = i;\n        numLowestNetScores = 1;\n      } else if (netScore !== null && netScore === lowestNetScore) {\n        numLowestNetScores++;\n      }\n    }\n    return numLowestNetScores === 1 ? lowestNetScorePlayerIndex : null;\n  };\n  const deletePlayer = playerIndex => {\n    if (window.confirm(\"Are you sure you want to delete this player?\")) {\n      const newPlayerNames = [...playerNames];\n      newPlayerNames.splice(playerIndex, 1);\n      setPlayerNames(newPlayerNames);\n      const newScores = [...scores];\n      newScores.splice(playerIndex, 1);\n      setScores(newScores);\n    }\n  };\n  const handlePlayerNameChange = (index, newName) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = newName;\n    setPlayerNames(newPlayerNames);\n  };\n  const [playerNames, setPlayerNames] = useState([]);\n  const [scores, setScores] = useState(Array(playerNames.length).fill(Array(holeInfo.length).fill(\"\")));\n  const editPlayer = playerIndex => {\n    const playerName = prompt(\"Please enter the new player's name.\", playerNames[playerIndex]);\n    if (playerName === null || playerName.trim() === \"\") {\n      alert(\"Invalid name entered. Please enter a valid name.\");\n      return;\n    }\n    const handicap = parseInt(prompt(\"Please enter the new player's handicap.\", playerHandicaps[playerIndex]));\n    if (isNaN(handicap)) {\n      alert(\"Invalid handicap entered. Please enter a valid number.\");\n    } else {\n      handlePlayerNameChange(playerIndex, playerName);\n      handleHandicapChange(playerIndex, handicap);\n    }\n  };\n  const updateScore = (playerIndex, holeIndex, score) => {\n    const newScores = [...scores];\n    newScores[playerIndex][holeIndex] = score;\n    setScores(newScores);\n  };\n  const addPlayer = (playerName, handicap) => {\n    const newPlayerNames = [...playerNames, playerName];\n    const newScores = [...scores, Array(holeInfo.length).fill(\"\")];\n    const newPlayerHandicaps = [...playerHandicaps, handicap];\n    setPlayerNames(newPlayerNames);\n    setScores(newScores);\n    setPlayerHandicaps(newPlayerHandicaps);\n  };\n  const getLowestScorePlayerIndex = holeIndex => {\n    let lowestScore = Infinity;\n    let lowestScorePlayerIndex = null;\n    let numLowestScores = 0;\n    for (let i = 0; i < playerNames.length; i++) {\n      const playerScore = scores[i][holeIndex];\n      if (playerScore !== \"\" && parseInt(playerScore) < lowestScore) {\n        lowestScore = parseInt(playerScore);\n        lowestScorePlayerIndex = i;\n        numLowestScores = 1;\n      } else if (playerScore !== \"\" && parseInt(playerScore) === lowestScore) {\n        numLowestScores++;\n      }\n    }\n    return numLowestScores === 1 ? lowestScorePlayerIndex : null;\n  };\n  const getCellClassName = (playerIndex, holeIndex) => {\n    const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\n    const strokeIndex = getStrokeIndex(playerIndex, holeIndex);\n    let cellClass = \"cell score\";\n    if (playerIndex === lowestNetScorePlayerIndex) {\n      cellClass += \" lowest\";\n    }\n    if (strokeIndex > 0) {\n      cellClass += \" stroke\";\n    }\n    return cellClass;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scorecard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell player-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), holeInfo.map(hole => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", hole.hole]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Par \", hole.par]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"H: \", hole.handicap]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, hole.hole, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell total\",\n        children: \"Total\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), playerNames.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-players\",\n      children: \"No players added. Click \\\"Add Player\\\" to start.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), playerNames.map((playerName, playerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell player-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePlayer(playerIndex),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => editPlayer(playerIndex),\n          children: [playerName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"handicap\",\n            children: [\"H: \", playerHandicaps[playerIndex]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), scores[playerIndex].map((score, holeIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCellClassName(playerIndex, holeIndex),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: score,\n          onChange: e => updateScore(playerIndex, holeIndex, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this)\n      }, holeIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell total\",\n        children: scores[playerIndex].reduce((acc, cur) => cur === \"\" ? acc : acc + parseInt(cur), 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 5\n      }, this)]\n    }, playerIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-player-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPlayerWithHandicap,\n        children: \"Add Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [isBuyInPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buy-in-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Buy-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: buyIn,\n          onChange: e => changeBuyIn(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleBuyInPopup,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-style\",\n          onClick: calculateSkins,\n          children: \"Calculate Skins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-style\",\n          onClick: toggleBuyInPopup,\n          children: \"Change Buy-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 1\n    }, this), skinsResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skins-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Skins Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: playerNames.map((playerName, playerIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [playerName, \": \", skinsResult.playerSkins[playerIndex], \" skins ($\", skinsResult.payout[playerIndex].toFixed(2), \")\"]\n        }, playerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(GolfScorecard, \"glOVPZ3ZWQeZiCQWHyeM78XAywg=\");\n_c = GolfScorecard;\nexport default GolfScorecard;\nvar _c;\n$RefreshReg$(_c, \"GolfScorecard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","holeInfo","hole","par","handicap","GolfScorecard","_s","buyIn","setBuyIn","isBuyInPopupVisible","setIsBuyInPopupVisible","changeBuyIn","newBuyIn","toggleBuyInPopup","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","getStrokeIndex","playerIndex","holeIndex","playerHandicap","playerHandicaps","holeHandicap","setPlayerHandicaps","addPlayerWithHandicap","playerName","prompt","trim","alert","parseInt","isNaN","addPlayer","handleHandicapChange","index","newHandicap","newPlayerHandicaps","skinsResult","setSkinsResult","calculateSkins","skins","carryOver","totalSkins","playerNames","length","forEach","lowestNetScorePlayerIndex","getLowestNetScorePlayerIndex","push","value","playerSkins","Array","fill","skin","payout","map","skinsWon","lowestNetScore","Infinity","numLowestNetScores","i","playerScore","scores","netScore","deletePlayer","window","confirm","newPlayerNames","splice","setPlayerNames","newScores","setScores","handlePlayerNameChange","newName","editPlayer","updateScore","score","getLowestScorePlayerIndex","lowestScore","lowestScorePlayerIndex","numLowestScores","getCellClassName","strokeIndex","cellClass","className","type","onChange","e","target","reduce","acc","cur","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/16145/Desktop/golf/src/GolfScorecard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./GolfScorecard.css\";\r\n\r\nconst holeInfo = [\r\n  { hole: 1, par: 4, handicap: 5 },\r\n  { hole: 2, par: 3, handicap: 11 },\r\n  { hole: 3, par: 5, handicap: 7 },\r\n  { hole: 4, par: 4, handicap: 1 },\r\n  { hole: 5, par: 4, handicap: 9 },\r\n  { hole: 6, par: 5, handicap: 16 },\r\n  { hole: 7, par: 3, handicap: 17 },\r\n  { hole: 8, par: 4, handicap: 15 },\r\n  { hole: 9, par: 4, handicap: 3 },\r\n  { hole: 10, par: 4, handicap: 8 },\r\n  { hole: 11, par: 4, handicap: 4 },\r\n  { hole: 12, par: 3, handicap: 14 },\r\n  { hole: 13, par: 4, handicap: 12 },\r\n  { hole: 14, par: 4, handicap: 10 },\r\n  { hole: 15, par: 4, handicap: 2 },\r\n  { hole: 16, par: 5, handicap: 2 },\r\n  { hole: 17, par: 3, handicap: 18 },\r\n  { hole: 18, par: 5, handicap: 6 },\r\n];\r\n\r\n\r\nconst GolfScorecard = () => {\r\n\r\n  const [buyIn, setBuyIn] = useState(10);\r\n  const [isBuyInPopupVisible, setIsBuyInPopupVisible] = useState(false);\r\n  const changeBuyIn = (newBuyIn) => {\r\n    setBuyIn(newBuyIn);\r\n  };\r\n  const toggleBuyInPopup = () => {\r\n    setIsBuyInPopupVisible(!isBuyInPopupVisible);\r\n  };\r\n  <button onClick={toggleBuyInPopup}>Change Buy-in</button>\r\n\r\n\r\n  const getStrokeIndex = (playerIndex, holeIndex) => {\r\n    const playerHandicap = playerHandicaps[playerIndex];\r\n    const holeHandicap = holeInfo[holeIndex].handicap;\r\n    return playerHandicap >= holeHandicap ? 1 : 0;\r\n  };\r\n  \r\n  \r\n  \r\n  const [playerHandicaps, setPlayerHandicaps] = useState([]);\r\n\r\n  const addPlayerWithHandicap = () => {\r\n    const playerName = prompt(\"Please enter the player's name.\");\r\n    if (playerName === null || playerName.trim() === \"\") {\r\n      alert(\"Invalid name entered. Please enter a valid name.\");\r\n      return;\r\n    }\r\n    const handicap = parseInt(prompt(\"Please enter the player's handicap.\"));\r\n    if (isNaN(handicap)) {\r\n      alert(\"Invalid handicap entered. Please enter a valid number.\");\r\n    } else {\r\n      addPlayer(playerName, handicap);\r\n    }\r\n  };\r\n \r\n\r\n  const handleHandicapChange = (index, newHandicap) => {\r\n  const newPlayerHandicaps = [...playerHandicaps];\r\n  newPlayerHandicaps[index] = newHandicap;\r\n  setPlayerHandicaps(newPlayerHandicaps);\r\n};\r\n\r\n  const [skinsResult, setSkinsResult] = useState(null);\r\n\r\n  const calculateSkins = () => {\r\n    const skins = [];\r\n    let carryOver = 0;\r\n    const buyIn = 10;\r\n    const totalSkins = playerNames.length * buyIn;\r\n  \r\n    holeInfo.forEach((hole, holeIndex) => {\r\n      const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\r\n  \r\n      if (lowestNetScorePlayerIndex !== null) {\r\n        skins.push({\r\n          hole: hole.hole,\r\n          playerIndex: lowestNetScorePlayerIndex,\r\n          value: 1 + carryOver,\r\n        });\r\n        carryOver = 0;\r\n      } else {\r\n        carryOver++;\r\n      }\r\n    });\r\n  \r\n    const playerSkins = Array(playerNames.length).fill(0);\r\n    skins.forEach((skin) => {\r\n      playerSkins[skin.playerIndex] += skin.value;\r\n    });\r\n  \r\n    const payout = playerSkins.map((skinsWon) => (skinsWon * totalSkins) / holeInfo.length);\r\n  \r\n    setSkinsResult({ skins, playerSkins, payout });\r\n  };\r\n  \r\n  const getLowestNetScorePlayerIndex = (holeIndex) => {\r\n    let lowestNetScore = Infinity;\r\n    let lowestNetScorePlayerIndex = null;\r\n    let numLowestNetScores = 0;\r\n  \r\n    for (let i = 0; i < playerNames.length; i++) {\r\n      const playerScore = scores[i][holeIndex];\r\n      const playerHandicap = playerHandicaps[i];\r\n      const holeHandicap = holeInfo[holeIndex].handicap;\r\n      const netScore = playerScore !== \"\" ? parseInt(playerScore) - (playerHandicap >= holeHandicap ? 1 : 0) : null;\r\n  \r\n      if (netScore !== null && netScore < lowestNetScore) {\r\n        lowestNetScore = netScore;\r\n        lowestNetScorePlayerIndex = i;\r\n        numLowestNetScores = 1;\r\n      } else if (netScore !== null && netScore === lowestNetScore) {\r\n        numLowestNetScores++;\r\n      }\r\n    }\r\n  \r\n    return numLowestNetScores === 1 ? lowestNetScorePlayerIndex : null;\r\n  };\r\n  \r\n\r\n  const deletePlayer = (playerIndex) => {\r\n    if (window.confirm(\"Are you sure you want to delete this player?\")) {\r\n      const newPlayerNames = [...playerNames];\r\n      newPlayerNames.splice(playerIndex, 1);\r\n      setPlayerNames(newPlayerNames);\r\n\r\n      const newScores = [...scores];\r\n      newScores.splice(playerIndex, 1);\r\n      setScores(newScores);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handlePlayerNameChange = (index, newName) => {\r\n    const newPlayerNames = [...playerNames];\r\n    newPlayerNames[index] = newName;\r\n    setPlayerNames(newPlayerNames);\r\n  };\r\n\r\n  const [playerNames, setPlayerNames] = useState([]);\r\n  const [scores, setScores] = useState(\r\n    Array(playerNames.length).fill(Array(holeInfo.length).fill(\"\"))\r\n  );\r\n\r\n  const editPlayer = (playerIndex) => {\r\n    const playerName = prompt(\"Please enter the new player's name.\", playerNames[playerIndex]);\r\n    if (playerName === null || playerName.trim() === \"\") {\r\n      alert(\"Invalid name entered. Please enter a valid name.\");\r\n      return;\r\n    }\r\n  \r\n    const handicap = parseInt(prompt(\"Please enter the new player's handicap.\", playerHandicaps[playerIndex]));\r\n    if (isNaN(handicap)) {\r\n      alert(\"Invalid handicap entered. Please enter a valid number.\");\r\n    } else {\r\n      handlePlayerNameChange(playerIndex, playerName);\r\n      handleHandicapChange(playerIndex, handicap);\r\n    }\r\n  };\r\n  \r\n\r\n  const updateScore = (playerIndex, holeIndex, score) => {\r\n    const newScores = [...scores];\r\n    newScores[playerIndex][holeIndex] = score;\r\n    setScores(newScores);\r\n  };\r\n\r\n  const addPlayer = (playerName, handicap) => {\r\n    const newPlayerNames = [...playerNames, playerName];\r\n    const newScores = [...scores, Array(holeInfo.length).fill(\"\")];\r\n    const newPlayerHandicaps = [...playerHandicaps, handicap];\r\n    setPlayerNames(newPlayerNames);\r\n    setScores(newScores);\r\n    setPlayerHandicaps(newPlayerHandicaps);\r\n  };\r\n\r\n  const getLowestScorePlayerIndex = (holeIndex) => {\r\n    let lowestScore = Infinity;\r\n    let lowestScorePlayerIndex = null;\r\n    let numLowestScores = 0;\r\n\r\n    for (let i = 0; i < playerNames.length; i++) {\r\n      const playerScore = scores[i][holeIndex];\r\n      if (playerScore !== \"\" && parseInt(playerScore) < lowestScore) {\r\n        lowestScore = parseInt(playerScore);\r\n        lowestScorePlayerIndex = i;\r\n        numLowestScores = 1;\r\n      } else if (playerScore !== \"\" && parseInt(playerScore) === lowestScore) {\r\n        numLowestScores++;\r\n      }\r\n    }\r\n  \r\n    return numLowestScores === 1 ? lowestScorePlayerIndex : null;\r\n  };\r\n  const getCellClassName = (playerIndex, holeIndex) => {\r\n    const lowestNetScorePlayerIndex = getLowestNetScorePlayerIndex(holeIndex);\r\n    const strokeIndex = getStrokeIndex(playerIndex, holeIndex);\r\n    let cellClass = \"cell score\";\r\n    if (playerIndex === lowestNetScorePlayerIndex) {\r\n      cellClass += \" lowest\";\r\n    }\r\n    if (strokeIndex > 0) {\r\n      cellClass += \" stroke\";\r\n    }\r\n    return cellClass;\r\n  };\r\n   \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"scorecard\">\r\n      <div className=\"header\">\r\n        <div className=\"cell player-name\"></div>\r\n        {holeInfo.map((hole) => (\r\n          <div key={hole.hole} className=\"cell\">\r\n            <div> {hole.hole}</div>\r\n            <div>Par {hole.par}</div>\r\n            <div>H: {hole.handicap}</div>\r\n          </div>\r\n        ))}\r\n        <div className=\"cell total\">Total</div>\r\n      </div>\r\n\r\n       \r\n            {playerNames.length === 0 && (\r\n        <div className=\"no-players\">No players added. Click \"Add Player\" to start.</div>\r\n      )}\r\n\r\n      {playerNames.map((playerName, playerIndex) => (\r\n        <div key={playerIndex} className=\"body\">\r\n          <div className=\"cell player-name\">\r\n            <button onClick={() => deletePlayer(playerIndex)}>Delete</button>\r\n            <span onClick={() => editPlayer(playerIndex)}>\r\n              {playerName}\r\n              <span className=\"handicap\">H: {playerHandicaps[playerIndex]}</span>\r\n            </span>\r\n          </div>\r\n\r\n\r\n    {scores[playerIndex].map((score, holeIndex) => (\r\n      <div key={holeIndex} className={getCellClassName(playerIndex, holeIndex)}>\r\n        <input\r\n          type=\"number\"\r\n          value={score}\r\n          onChange={(e) =>\r\n            updateScore(playerIndex, holeIndex, e.target.value)\r\n          }\r\n        />\r\n      </div>\r\n    ))}\r\n    <div className=\"cell total\">\r\n      {scores[playerIndex].reduce(\r\n        (acc, cur) => (cur === \"\" ? acc : acc + parseInt(cur)),\r\n        0\r\n      )}\r\n    </div>\r\n  </div>\r\n))}\r\n\r\n<div className=\"add-player-button\">\r\n  <button onClick={addPlayerWithHandicap}>Add Player</button>\r\n</div>\r\n\r\n\r\n<div className=\"footer\">\r\n  {isBuyInPopupVisible && (\r\n    <div className=\"buy-in-popup\">\r\n      <h3>Change Buy-in</h3>\r\n      <input\r\n        type=\"number\"\r\n        value={buyIn}\r\n        onChange={(e) => changeBuyIn(parseInt(e.target.value))}\r\n      />\r\n      <button onClick={toggleBuyInPopup}>Save</button>\r\n    </div>\r\n  )}\r\n\r\n  <div className=\"button-container\">\r\n    <button className=\"button-style\" onClick={calculateSkins}>\r\n      Calculate Skins\r\n    </button>\r\n    <button className=\"button-style\" onClick={toggleBuyInPopup}>\r\n      Change Buy-in\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n    {skinsResult && (\r\n  <div className=\"skins-result\">\r\n    <h2>Skins Results</h2>\r\n    <ul>\r\n      {playerNames.map((playerName, playerIndex) => (\r\n        <li key={playerIndex}>\r\n          {playerName}: {skinsResult.playerSkins[playerIndex]} skins (${skinsResult.payout[playerIndex].toFixed(2)})\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n  \r\n            }\r\n            export default GolfScorecard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}